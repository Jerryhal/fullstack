{"version":3,"sources":["functions/rest.functions.js","index.js"],"names":["baseUrl","ReactDOM","render","react_default","a","createElement","_useState","useState","_useState2","Object","slicedToArray","blogs","setBlogs","useEffect","axios","get","then","response","data","Fragment","length","map","blog","i","author","title","url","likes","document","getElementById"],"mappings":"sOAEMA,EAAU,kCC2BhBC,IAASC,OAAOC,EAAAC,EAAAC,cAxBJ,WAAM,IAAAC,EACYC,mBAAS,IADrBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACPK,EADOH,EAAA,GACAI,EADAJ,EAAA,GAEdK,oBAAU,WDFVC,IAAMC,IAAIf,GAASgB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,OCGhCF,KAAK,SAAAL,GACVC,EAASD,MAEd,IAUH,OACIR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAe,SAAA,KACIhB,EAAAC,EAAAC,cAAA,UATAM,GAASA,EAAMS,QAAUT,EAAMS,OAAS,EACjCT,EAAMU,IAAI,SAACC,EAAMC,GAAP,OACTpB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKE,OAAV,IAAmBF,EAAKG,MAAxB,IAAgCH,EAAKI,IAArC,IAA2CJ,EAAKK,SAErD,cAWC,MAASC,SAASC,eAAe","file":"static/js/main.4ae8a52c.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = 'http://localhost:3001/api/blogs'\r\n\r\nconst getAll = () =>\r\n    axios.get(baseUrl).then(response => response.data);\r\n\r\nconst create = (blog) =>\r\n    axios.post(baseUrl, blog).then(response => response.data);\r\n\r\nconst remove = (blog) => \r\n    axios.delete(baseUrl + '/' +  blog.id).then(response => response.data);\r\n\r\nconst put = (blog, id) => {\r\n    const newBlog = { ...blog, id: id}\r\n    return axios.put(baseUrl + '/' +  newBlog.id, newBlog)\r\n    .then(response => response.data)\r\n    .catch(error => error);\r\n}\r\n\r\nexport { getAll, create, remove, put } ","import './index.css';\nimport React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport { getAll } from './functions/rest.functions'\n\nconst App = () => {\n    const [blogs, setBlogs] = useState([])\n    useEffect(() => {\n        getAll().then(blogs => {\n            setBlogs(blogs);\n        })\n    }, [])\n    \n    const getBlogs = () => {\n        if (blogs && blogs.length && blogs.length > 0)\n            return blogs.map((blog, i) =>\n                    <li>{blog.author} {blog.title} {blog.url} {blog.likes}</li>\n            )\n        return 'no blogs'\n    }\n \n    return (\n        <>\n            <ul>\n                {getBlogs()}\n            </ul>\n        </>\n    )\n}\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}