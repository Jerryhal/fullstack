{"version":3,"sources":["components/rows.js","components/messages.js","components/filter.js","components/form.js","components/phonebook.js","functions/rest.functions.js","index.js"],"names":["Rows","_ref","persons","removeContact","react_default","a","createElement","Fragment","length","map","person","i","name","number","onClick","SuccessMessage","successMessage","style","borderStyle","borderColor","backgroundColor","Filter","filterContacts","onChange","Form","addContact","nameHandler","numberHandler","onSubmit","type","Phonebook","filteredContacts","messages","filter","components_form","components_rows","baseUrl","ReactDOM","render","useEffect","axios","get","then","response","data","changeContactsState","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","setSuccessMessage","_useState9","_useState10","setFilteredContacts","state","phonebook","event","substring","target","value","preventDefault","newPerson","personExists","find","id","objectSpread","put","asd","alert","concat","post","setTimeout","delete","remove","e","document","getElementById"],"mappings":"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","file":"static/js/main.894ad582.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Rows = ({ persons, removeContact }) => {\r\n    const rows = () => {\r\n        if (persons && persons.length && persons.length > 0)\r\n            return persons.map((person, i) =>\r\n                    <li>{person.name} {person.number} <button onClick={() => removeContact(person)}>poista</button></li>\r\n            )\r\n        return 'no rows'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ul>\r\n                {rows()}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\nexport default Rows;\r\n","import React from 'react'\r\n\r\nconst SuccessMessage = ({successMessage}) => {\r\n    const style = {\r\n        borderStyle: 'solid',\r\n        borderColor: 'green',\r\n        backgroundColor: 'light-green'\r\n    }\r\n    if (successMessage)\r\n        return (\r\n            <div style={style}>\r\n                {successMessage}\r\n            </div>\r\n        )\r\n    return ''\r\n}\r\nexport default SuccessMessage;\r\n","import React from 'react'\r\n\r\nconst Filter = ({ filterContacts }) => {\r\n    return (\r\n        <div>\r\n            rajaa näytettäviä <input onChange={filterContacts} />\r\n        </div>\r\n    )\r\n}\r\nexport default Filter;","import React from 'react'\r\n\r\nconst Form = ({ addContact, nameHandler, numberHandler }) => {\r\n    return (\r\n        <form onSubmit={addContact}>\r\n            <div>\r\n                nimi: <input onChange={nameHandler} />\r\n            </div>\r\n            <div>\r\n                numero: <input onChange={numberHandler} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">lisää</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default Form;\r\n","import React from 'react'\r\n\r\nimport Rows from './rows'\r\nimport SuccessMessage from './messages'\r\nimport Filter from './filter'\r\nimport Form from './form'\r\n\r\nconst Phonebook = ({ filterContacts, addContact, \r\n    nameHandler, numberHandler, removeContact,\r\n    filteredContacts, successMessage }) => {\r\n    return (\r\n        <div>\r\n            <SuccessMessage successMessage={successMessage} />\r\n            <h2>Puhelinluettelo</h2>\r\n            <Filter filterContacts={filterContacts} />\r\n            <Form addContact={addContact} nameHandler={nameHandler} numberHandler={numberHandler} />\r\n            <h2>Numerot</h2>\r\n            <Rows persons={filteredContacts} removeContact={removeContact} />\r\n        </div>\r\n    )\r\n}\r\nexport default Phonebook;","import axios from 'axios'\r\n\r\nconst baseUrl = 'http://localhost:3001/persons'\r\n\r\nconst getAll = () =>\r\n    axios.get(baseUrl).then(response => response.data);\r\n\r\nconst create = (person) =>\r\n    axios.post(baseUrl, person).then(response => response.data);\r\n\r\nconst remove = (person) => \r\n    axios.delete(baseUrl + '/' +  person.id).then(response => response.data);\r\n\r\nconst put = (person, id) => {\r\n    const newPerson = { ...person, id: id}\r\n    return axios.put(baseUrl + '/' +  newPerson.id, newPerson).then(response => response.data);\r\n}\r\n\r\nexport { getAll, create, remove, put } ","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport Phonebook from './components/phonebook'\nimport './index.css'\nimport { getAll, create, remove, put } from './functions/rest.functions'\n\nconst App = () => {\n    useEffect(() => {\n        getAll().then(persons => {\n            changeContactsState(persons)\n        })\n    }, [])\n\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [successMessage, setSuccessMessage] = useState('')\n    const [filteredContacts, setFilteredContacts] = useState(persons)\n\n    const changeContactsState = (state) => {\n        setPersons(state)\n        setFilteredContacts(state)\n    }\n    const addContact = (event) => {\n        event.preventDefault()\n        const newPerson = {\n            name: newName,\n            number: newNumber\n        }\n        const personExists = persons.find(person => person.name === newPerson.name)\n        if (!personExists) {\n            create(newPerson).then(newPerson => {\n                changeContactsState(persons.concat(newPerson))\n                setTimeout(() => {\n                    setSuccessMessage(null)\n                }, 5000)\n                setSuccessMessage('Listättiin ' + newPerson.name)\n            })\n        } else if (personExists && newPerson.number && newPerson.number.length > 0) {\n            put(newPerson, personExists.id).then(asd =>\n                changeContactsState(persons.map(person => person.id !== personExists.id ? person : newPerson))\n                )\n        } else {\n            alert(`${newName} on jo luettelossa`)\n        }\n    }\n    const removeContact = (person) => {\n        remove(person)\n            .then(() => {\n                changeContactsState(persons.filter(e => e.id !== person.id))\n            })\n    }\n\n    const nameHandler = (event) => setNewName(event.target.value)\n    const numberHandler = (event) => setNewNumber(event.target.value)\n    const filterContacts = (event) =>\n        setFilteredContacts(persons.filter(person =>\n            person.name.substring(\n                0, event.target.value.length) === event.target.value)\n        )\n    return (\n        <Phonebook filterContacts={filterContacts} addContact={addContact}\n            nameHandler={nameHandler} numberHandler={numberHandler}\n            filteredContacts={filteredContacts}\n            successMessage={successMessage} removeContact={removeContact} />\n    )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}